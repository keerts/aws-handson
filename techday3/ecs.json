{

  "Parameters" : {

    "TransactorInstanceType" : {
      "Description" : "Transactor EC2 instance type",
      "Type" : "String",
      "Default" : "t2.medium",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
      ,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "KeyName" : {
      "Default": "techday3",
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    }
  },

  "Mappings" : {

    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"HVM64" : "ami-08111162"}
    },

    "ECSRegionArch2AMI" : {
      "us-east-1"        : {"HVM64" : "ami-67a3a90d"}
    },

    "Admins" : {
      "techday3" : { "sshPublicKey" : "xxxx" }
    }

  },

  "Resources" : {

    "TransactorGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn" : [ "DatomicCluster"],
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "TransactorLaunchConfig" },
        "MinSize" : "1",
        "MaxSize" : "2",
        "TerminationPolicies" : [ "OldestInstance","ClosestToNextInstanceHour"]
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "PT15M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "0",
          "MaxBatchSize": "1",
          "PauseTime" : "PT15M",
          "WaitOnResourceSignals": "true"
        }
      }
    },

    "TransactorLaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "Comment" : "Install a simple application",
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "wget"             : []
              }
            },

            "files" : {
              "/etc/cfn/cfn-hup.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" : "AWS::Region" }, "\n"
                ]]},
                "mode"    : "000400",
                "owner"   : "root",
                "group"   : "root"
              },

              "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                "content": { "Fn::Join" : ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                  "action=/opt/aws/bin/cfn-init -v ",
                  "         --stack ", { "Ref" : "AWS::StackName" },
                  "         --resource TransactorLaunchConfig ",
                  "         --region ", { "Ref" : "AWS::Region" }, "\n",
                  "runas=root\n"
                ]]}
              }
            },

            "services" : {
              "sysvinit" : {
                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                  "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
              }
            }
          }
        }
      },
      "Properties" : {
        "ImageId" : {
          "Fn::FindInMap" : [ "ECSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "TransactorInstanceType" }, "Arch" ] } ]
        },
        "SecurityGroups" : [ { "Ref" : "SSHSecurityGroup" }, { "Ref" : "TransactorSecurityGroup" }, { "Fn::If" : [ "Test", { "Ref" : "TransactorUserAccessSecurityGroup" }, { "Ref" : "AWS::NoValue" }]} ],
        "InstanceType" : { "Ref" : "TransactorInstanceType" },
        "IamInstanceProfile": { "Ref": "TransactorInstanceProfile" },
        "KeyName" : { "Ref" : "KeyName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1", "\n",
          "yum install -y aws-cfn-bootstrap", "\n",

          "yum install -y aws-cli", "\n",
          "aws s3 cp s3://third-party-releases/ecs.config /etc/ecs/ecs.config", "\n",

          "/opt/aws/bin/cfn-init -v ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource TransactorLaunchConfig ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n",

          "echo ECS_CLUSTER=", {"Ref": "DatomicCluster"}, " >> /etc/ecs/ecs.config", "\n",

          "/opt/aws/bin/cfn-signal --success true ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource TransactorGroup ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n"

        ]]}}
      }
    },

    "DatomicCluster" : {
      "Type" : "AWS::ECS::Cluster"
    },

    "DatomicService": {
      "Type": "AWS::ECS::Service",
      "DependsOn" : [ "TransactorGroup"],
      "Properties" : {
        "Cluster": { "Ref": "DatomicCluster" },
        "DesiredCount": 1,
        "TaskDefinition" : { "Ref":"DatomicTask" }
      }
    },

    "DatomicTask" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name": "datomic",
            "MountPoints": [],
            "Image":"avisi/datomic:0.9.5350-3",
            "Cpu": "10",
            "Environment" : [
              { "Name" : "licenseKey", "Value" : "evVCPfoHl1frXjV7xlppZis/S5Y34UqadWwIYqzzk8hvSSViIGgZhjcPryHIMobWg92wj7HXqLnoQ2C430ICbkLRREVvblPYPB0arh11XptkA+46Cd8iXxLSL2BZDEU99rEniXKFuKT94VewOXRkGKOk2uK75L/s2kJT6EKdSCrmltfpp1GWPHXeoR6q9WcwtLyFZ7MImXgtS+cjMC6RvgcsZIAcABdlJMWnJYQlkX7u6Hx7Tn2pK02RlQCMC+hzUWz2dmeaz/OADKtwwlPT8UjIqkuBcbtgq2FH96BtCkNhRd9kalLJlB4yblh7jBVRjS+HaHKGMv43xBKrBkRkPA==" },
              { "Name" : "altHost", "Value": { "Fn::FindInMap" : [ "Environments", { "Ref" : "AWS::StackName" } , "AltHost"] } },
              { "Name" : "awsDynamodbTable", "Value": { "Fn::FindInMap" : [ "Environments", { "Ref" : "AWS::StackName" } , "DatabaseTableName"] } },
              { "Name" : "awsDynamodbRegion", "Value": { "Ref" : "AWS::Region" }},
              { "Name" : "awsTransactorRole", "Value": { "Ref" : "TransactorRole" }},
              { "Name" : "awsPeerRole", "Value": { "Ref" : "ApplicationRole" }},
              { "Name" : "memoryIndexThreshold", "Value": "32m" },
              { "Name" : "memoryIndexMax", "Value": "512m" },
              { "Name" : "objectCacheMax", "Value": "1g" },
              { "Name" : "Xmx", "Value": "3g" },
              { "Name" : "Xms", "Value": "3g" }
            ],
            "PortMappings":[
              { "ContainerPort": 4334, "HostPort": 4334 },
              { "ContainerPort": 4335, "HostPort": 4335 },
              { "ContainerPort": 4336, "HostPort": 4336 }
            ],
            "Memory":"3500",
            "Essential": "true"
          }],
        "Volumes": [
          {
            "Name": "my-vol"
          }]
      }
    },

    "DatomicBackupService": {
      "Type": "AWS::ECS::Service",
      "DependsOn" : [ "TransactorGroup"],
      "Properties" : {
        "Cluster": { "Ref": "DatomicCluster" },
        "DesiredCount": 0,
        "TaskDefinition" : { "Ref":"DatomicBackupTask" }
      }
    },

    "DatomicBackupTask" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name": "datomic-backup",
            "Command" : [ "bin/datomic", "backup-db", { "Fn::Join" : [ "",  [ "datomic:ddb://us-east-1/", { "Fn::FindInMap" : [ "Environments", { "Ref" : "AWS::StackName" } , "DatabaseTableName"] }, "/relations" ]] }, { "Fn::Join" : [ "", [  "s3://", { "Ref" : "BackupBucket" }, "/", {  "Ref" : "AWS::StackName" } ]] } ],
            "Image":"avisi/datomic:0.9.5350-1",
            "Cpu": "10",
            "Memory":"3500"
          }],
        "Volumes": [
          {
            "Name": "my-vol"
          }]
      }
    },

    "ECSRolePolicyECS": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName" : "ECSInstance",
        "PolicyDocument": {
          "Statement": [ {
            "Effect": "Allow",
              "Action": [
                "ecs:CreateCluster",
                "ecs:DeregisterContainerInstance",
                "ecs:DiscoverPollEndpoint",
                "ecs:Poll",
                "ecs:RegisterContainerInstance",
                "ecs:StartTelemetrySession",
                "ecs:Submit*"
            ],
            "Resource": "*"
          } ]
        },
        "Roles": [ {
          "Ref": "TransactorRole"
        } ]
      }
    },

    "TransactorInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ {
          "Ref": "TransactorRole"
        } ]
      }
    }

}
